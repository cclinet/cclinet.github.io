---
import "../styles/global.css";
import { ClientRouter } from "astro:transitions";
import { SITE_TITLE } from "@/consts";

interface Props {
  title: string;
  description?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title, description } = Astro.props;

const isPostPage = Astro.url.pathname.startsWith("/posts/");
const katex_version = (await import("katex")).version;
---

<meta charset="utf-8" />
<meta content="width=device-width,initial-scale=1" name="viewport" />
<link href="/favicon.svg" rel="icon" type="image/svg+xml" />
<meta content={Astro.generator} name="generator" />
<link href="/sitemap-index.xml" rel="sitemap" />
<link href={canonicalURL} rel="canonical" />
<title>{title}</title>

<meta content={title} name="title" />
{description && <meta content={description} name="description" />}

<link
  href={new URL("rss.xml", Astro.site)}
  rel="alternate"
  title={SITE_TITLE}
  type="application/rss+xml"
/>

{
  /* {
  isPostPage && (
    <link
      crossorigin="anonymous"
      href={`https://cdnjs.cloudflare.com/ajax/libs/KaTeX/${katex_version}/katex.min.css`}
      referrerpolicy="no-referrer"
      rel="stylesheet"
    />
  )
} */
}
<>
  {
    isPostPage && (
      <link
        crossorigin="anonymous"
        href={`https://cdn.jsdelivr.net/npm/katex@${katex_version}/dist/katex.min.css`}
        referrerpolicy="no-referrer"
        rel="stylesheet"
      />
      <script
        crossorigin="anonymous"
        data-cfasync="false"
        is:inline
        src={`https://cdn.jsdelivr.net/npm/katex@${katex_version}/dist/contrib/copy-tex.min.js`}
      />
    )
  }

  <ClientRouter />
</>
